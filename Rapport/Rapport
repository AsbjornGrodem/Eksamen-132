4. Rapport og øvrige filer.

Mains.js - Javascript-filen vår legger til funksjonalitet til nettsiden. Det er også her vi henter og laster ned datasett.

Main.html - Selve nettsiden hvor vi legger til forskjellige knapper og avsnitt.

Main.css - Her endrer vi det estetiske. Farger og størrelser på forskjellige ting blant annet.

responsive.css - Her har vi funksjonalitet som registrerer skjermstørrelsen til brukeren, og lar oss endre på ting når skjermen er mindre.
  I dette tilfellet, å la historisk data ligge vertikalt på mindre skjermer.


1. I vårt program bruker vi funksjonen "callback" til å telle hvor mange sett som er ferdige. De blir lastet en etter en.
"befolkning.load(); utdanning.load(); sysselsatte.load();" kjører selve xhr-requestet.
"befolkning.onload = utdanning.onload = sysselsatte.onload = callback;", her sier vi at når befolkning har blitt lastet
(onload eksisterer, se kode inni load-funksjonen), skal callback kjøres, deretter det samme med de to andre datasettene.
For hver gang callback kjøres blir variabelen "left", som begynner som 3, en mindre. Når alle settene er lastet, vil
denne da være 0, og setTimeout og dens funksjoner blir kjørt.

2. Me vet at når left === 0, har callback blitt kjørt 3 ganger og alle datasettene er klare.

3. Ved å bruke @Media screen i css kan vi forandre ting når skjermen endrer seg. Når skjermen er mindre enn 700px, kjøres kode som
forandrer tabellene. "display: block;" "deler" opp tabellen, og float:left lar innholdet i cellene flyte til venstre. Sammenlign-tabellene
ble laget på motsatt måte av detaljer, noe som ikke er veldig optimalt, og derfor har vi enda en @Media screen som gjør det motsatte.
Sammenlignings-tabellene blir laget som vertikale, og blir derfor endret når skjermer er større enn 700px til horisontal, og tilbake til "standard" når
skjermen den er mindre enn 700px.


4. For å finne ut om alle datasettene inneholder de samme kommunene kan man bruke en enkel for-loop i de forskjellige datasettene.
For oss har ikke det vært nødvendig å finne ut, da vi advarer mot at noe av dataen kan inneholder feil.
